*******************
***	Packages	***
*******************
Msys packages:
https://sourceforge.net/p/msys2/wiki/Packages/

Open shell
MinGW-w64 Win64 Shell


example:
mingw/mingw-w64-lua 5.3.0-1 
A powerful light-weight programming language designed for extending applications. (mingw-w64)

MinGW 64:
	pacman -S mingw-w64-lua 5.3.0-1 
	
	
*******************************
***	MinGW64 compiler setup	***
*******************************

Global Compiler Settings -> Selected Compiler -> Copy
MinGW64

Global Compiler Settings -> Selected Compiler -> Toolchain executables -> Compiler's installation directory
C:\msys64\mingw64

Global Compiler Settings -> Selected Compiler -> Toolchain executables -> Program Files
C compiler: gcc.exe
C++ compiler: g++.exe
Linker for dynamic libs: g++.exe
Linker for static libs: ar.exe
Debugger: There isn't one for MinGW 64-bit yet, clear this and leave it blank
Resource compiler: windres.exe
Make program: make.exe


Global Compiler Settings -> Selected Compiler -> Search directories -> Compiler
C:\msys64\usr\local\include
(lua headers)

Global Compiler Settings -> Selected Compiler -> Search directories -> Linker
C:\msys64\usr\local\lib
(lua libraries)



***********************************
***	Project settings MinGW64	***
***********************************
Project -> Properties -> Build Targets -> Duplicate
Debug_MinGW64

Project -> Properties -> Build Targets -> Selected build target options -> Type:
Console aplication

Project -> Properties -> Build Targets -> Selected build target options -> 
Pause when execution ends: true

Project -> Properties -> Build Targets -> Selected build target options -> Output filename:
bin\Debug_MinGW64\Watermill.exe

Project -> Properties -> Build Targets -> Selected build target options -> Objects output dir:
obj\Debug_MinGW64\

Project -> Properties -> Build Targets -> Selected build target options -> Build target files:
All/? on

Project -> Build options
Project build options -> Selected compiler
MinGW64

Project -> Buld options
Project build options ->  Compiler settings -> Compiler Flags
Have g++ follow the C++11 ISO C++ language standard [-std=c++11]

Project -> Buld options
Project build options -> Search Directories -> Compiler -> Append target options to project options
// remove: ..\..\git\libraries\boost
..\..\git\libraries\freeglut\include


Project -> Build options
Project build options -> Search Directories -> Linker -> Append target options to project options
..\..\git\libraries\freeglut\lib\x64
..\..\..\..\..\..\..\..\..\msys64\mingw64\lib

Project -> Build options
Project build options -> Linker Settings -> Link Libraries -> Add
freeglut
psapi
opengl32

lua
(link to C:\msys64\usr\local\lib\liblua.a)

A) Boost:
boost_system-mt	
(link to C:\msys64\mingw64\lib\libboost_system-mt.dll.a)	
B) Boost:
boost_filesystem-mt
(link to C:\msys64\mingw64\lib\libboost_filesystem-mt.dll.a
(link to ..\..\..\..\..\..\..\..\..\msys64\mingw64\lib\libboost_filesystem-mt.dll.a)
C) Boost:
boost_locale-mt
(link to ..\..\..\..\..\..\..\..\..\msys64\mingw64\lib\libboost_locale-mt.dll.a)



Project -> Remove files
source/scripts/test.cpp

Copy
	C:\home\myImportantFiles\projects\git\libraries\freeglut\bin\x64\freeglut.dll
into
	bin\Debug_MinGW64\freeglut.dll
	
***	Boost	***
Msys2 64 bit -> MinGW-w64 Win64 Shell

pacman -S mingw-w64-x86_64-boost

C:\msys64\mingw64\include\boost

-------------------
---	Debugger	---
-------------------

Menu -> Settings -> Debugger -> Debugger settings -> Create config:
MinGW64
Executable path: C:\msys64\mingw64\bin\gdb.exe

Menu -> Debug -> Active Debuggers:
	GDB/CDB debugger: MinGW64
	
***************************
***	Lua installation	***
***************************

https://www.lua.org/download.html
Download 
lua-5.3.3.tar.gz

Extract
lua-5.3.3_Sources.zip
into folder
C:\msys64\home\Krzysztof\lua53


https://www.lua.org/download.html
Building:

>> cd ~/lua53
>> tar zxf lua-5.3.3.tar.gz
>> cd lua-5.3.3



Check where is mingw32-make.exe located:
>> where mingw32-make
C:\msys64\mingw64\bin\mingw32-make.exe

file:///C:/msys64/home/Krzysztof/lua53/lua-5.3.3/doc/readme.html
Build Lua
>> mingw32-make mingw 
>> mingw32-make test

Installing Lua
>> mingw32-make install
Installs lua.exe, luac.exe, lua.h into
C:\msys64\usr\local\bin\lua.exe
C:\msys64\usr\local\include\lua.h
C:\msys64\usr\local\lib\liblua.a

>> cp lua53.dll /bin/
Copy
C:\msys64\home\Krzysztof\lua53\lua-5.3.3\src\lua53.dll
into
C:\msys64\bin

Create script
~/lua53/lua_script.txt
>> cd ~/lua53
Run script
>> lua.exe lua_script.txt
